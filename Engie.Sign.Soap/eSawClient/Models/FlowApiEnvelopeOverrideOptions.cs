// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace eSaw.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    /// <summary>
    /// Override options.
    /// </summary>
    public partial class FlowApiEnvelopeOverrideOptions
    {
        /// <summary>
        /// Initializes a new instance of the FlowApiEnvelopeOverrideOptions
        /// class.
        /// </summary>
        public FlowApiEnvelopeOverrideOptions() { }

        /// <summary>
        /// Initializes a new instance of the FlowApiEnvelopeOverrideOptions
        /// class.
        /// </summary>
        public FlowApiEnvelopeOverrideOptions(IList<FlowApiEnvelopeOverrideOptionsRecipient> recipients = default(IList<FlowApiEnvelopeOverrideOptionsRecipient>), FlowApiAddFormFields addFormFields = default(FlowApiAddFormFields), FlowApiOverrideFormFieldOptions overrideFormFieldValues = default(FlowApiOverrideFormFieldOptions), string name = default(string), string emailSubject = default(string), string emailBody = default(string), bool? enableReminders = default(bool?), int? firstReminderDayAmount = default(int?), int? recurrentReminderDayAmount = default(int?), int? beforeExpirationDayAmount = default(int?), int? daysUntilExpire = default(int?), string callbackUrl = default(string), string statusUpdateCallbackUrl = default(string), WorkstepEventCallback workstepEventCallback = default(WorkstepEventCallback), string metaDataXml = default(string))
        {
            Recipients = recipients;
            AddFormFields = addFormFields;
            OverrideFormFieldValues = overrideFormFieldValues;
            Name = name;
            EmailSubject = emailSubject;
            EmailBody = emailBody;
            EnableReminders = enableReminders;
            FirstReminderDayAmount = firstReminderDayAmount;
            RecurrentReminderDayAmount = recurrentReminderDayAmount;
            BeforeExpirationDayAmount = beforeExpirationDayAmount;
            DaysUntilExpire = daysUntilExpire;
            CallbackUrl = callbackUrl;
            StatusUpdateCallbackUrl = statusUpdateCallbackUrl;
            WorkstepEventCallback = workstepEventCallback;
            MetaDataXml = metaDataXml;
        }

        /// <summary>
        /// A list of recipients which should replace the recipients in the
        /// template.
        /// </summary>
        [JsonProperty(PropertyName = "Recipients")]
        public IList<FlowApiEnvelopeOverrideOptionsRecipient> Recipients { get; set; }

        /// <summary>
        /// Added form fields.
        /// </summary>
        [JsonProperty(PropertyName = "AddFormFields")]
        public FlowApiAddFormFields AddFormFields { get; set; }

        /// <summary>
        /// Form field descriptions which should be filled.
        /// </summary>
        [JsonProperty(PropertyName = "OverrideFormFieldValues")]
        public FlowApiOverrideFormFieldOptions OverrideFormFieldValues { get; set; }

        /// <summary>
        /// Name of the envelope.
        /// </summary>
        [JsonProperty(PropertyName = "Name")]
        public string Name { get; set; }

        /// <summary>
        /// Email subject of the envelope.
        /// </summary>
        [JsonProperty(PropertyName = "EmailSubject")]
        public string EmailSubject { get; set; }

        /// <summary>
        /// Email body of the envelope.
        /// </summary>
        [JsonProperty(PropertyName = "EmailBody")]
        public string EmailBody { get; set; }

        /// <summary>
        /// Enable reminders for the envelope.
        /// If set, overrides the default options from the organization/user.
        /// </summary>
        [JsonProperty(PropertyName = "EnableReminders")]
        public bool? EnableReminders { get; set; }

        /// <summary>
        /// Amount of days until the first reminder is sent out.
        /// If set, overrides the default options from the organization/user.
        /// </summary>
        [JsonProperty(PropertyName = "FirstReminderDayAmount")]
        public int? FirstReminderDayAmount { get; set; }

        /// <summary>
        /// Amount of days until all recurrent reminders are sent out.
        /// If set, overrides the default options from the organization/user.
        /// </summary>
        [JsonProperty(PropertyName = "RecurrentReminderDayAmount")]
        public int? RecurrentReminderDayAmount { get; set; }

        /// <summary>
        /// Amount of days until a reminder about the expiration is sent out.
        /// If set, overrides the default options from the organization/user.
        /// </summary>
        [JsonProperty(PropertyName = "BeforeExpirationDayAmount")]
        public int? BeforeExpirationDayAmount { get; set; }

        /// <summary>
        /// Amount of days until the envelope expires.
        /// If set, overrides the default options from the organization/user.
        /// </summary>
        [JsonProperty(PropertyName = "DaysUntilExpire")]
        public int? DaysUntilExpire { get; set; }

        /// <summary>
        /// The callback url of the envelope.
        /// </summary>
        [JsonProperty(PropertyName = "CallbackUrl")]
        public string CallbackUrl { get; set; }

        /// <summary>
        /// The callback url of status changes for the envelope.
        /// </summary>
        [JsonProperty(PropertyName = "StatusUpdateCallbackUrl")]
        public string StatusUpdateCallbackUrl { get; set; }

        /// <summary>
        /// Workstep event callback options.
        /// </summary>
        [JsonProperty(PropertyName = "WorkstepEventCallback")]
        public WorkstepEventCallback WorkstepEventCallback { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "MetaDataXml")]
        public string MetaDataXml { get; set; }

    }
}
