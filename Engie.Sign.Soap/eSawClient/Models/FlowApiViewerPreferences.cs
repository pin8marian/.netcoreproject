// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace eSaw.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    /// <summary>
    /// The Viewer Preferences can be used to adapt the appearance and the
    /// behavior of the SignAnyWhere Viewer.
    /// </summary>
    public partial class FlowApiViewerPreferences
    {
        /// <summary>
        /// Initializes a new instance of the FlowApiViewerPreferences class.
        /// </summary>
        public FlowApiViewerPreferences() { }

        /// <summary>
        /// Initializes a new instance of the FlowApiViewerPreferences class.
        /// </summary>
        public FlowApiViewerPreferences(bool? showPageNavigationBar = default(bool?), bool? showThumbnails = default(bool?), bool? skipFinishConfirmDialog = default(bool?), bool? skipDocumentDialog = default(bool?), bool? showImagesInFullWidth = default(bool?), bool? disableGeolocation = default(bool?), bool? showDocumentDownloadDialogAfterAutomaticFinish = default(bool?), int? attachmentsMaxFileSize = default(int?), bool? skipPreviewImageOnDisposableCertificate = default(bool?), bool? loadCustomJs = default(bool?), bool? allowCustomButtons = default(bool?), string guidingBehavior = default(string), string formFieldsGuidingBehavior = default(string), bool? showVersionNumber = default(bool?), bool? enableWarningPopupOnLeave = default(bool?), string warningPopupDisplayAfter = default(string), bool? finishWorkstepOnOpen = default(bool?), bool? autoFinishAfterRequiredTasksDone = default(bool?), string guidingBehaviorOnFinishedTask = default(string), bool? skipThankYouDialog = default(bool?), string nativeAppsUrlScheme = default(string), string documentViewingMode = default(string), string thumbnailMode = default(string), bool? showTopBar = default(bool?), bool? displayRejectButtonInTopBar = default(bool?), FlowApiMultipleSignatureTypesAndBatchSigningSettings multipleSignatureTypesAndBatchSigningSettings = default(FlowApiMultipleSignatureTypesAndBatchSigningSettings))
        {
            ShowPageNavigationBar = showPageNavigationBar;
            ShowThumbnails = showThumbnails;
            SkipFinishConfirmDialog = skipFinishConfirmDialog;
            SkipDocumentDialog = skipDocumentDialog;
            ShowImagesInFullWidth = showImagesInFullWidth;
            DisableGeolocation = disableGeolocation;
            ShowDocumentDownloadDialogAfterAutomaticFinish = showDocumentDownloadDialogAfterAutomaticFinish;
            AttachmentsMaxFileSize = attachmentsMaxFileSize;
            SkipPreviewImageOnDisposableCertificate = skipPreviewImageOnDisposableCertificate;
            LoadCustomJs = loadCustomJs;
            AllowCustomButtons = allowCustomButtons;
            GuidingBehavior = guidingBehavior;
            FormFieldsGuidingBehavior = formFieldsGuidingBehavior;
            ShowVersionNumber = showVersionNumber;
            EnableWarningPopupOnLeave = enableWarningPopupOnLeave;
            WarningPopupDisplayAfter = warningPopupDisplayAfter;
            FinishWorkstepOnOpen = finishWorkstepOnOpen;
            AutoFinishAfterRequiredTasksDone = autoFinishAfterRequiredTasksDone;
            GuidingBehaviorOnFinishedTask = guidingBehaviorOnFinishedTask;
            SkipThankYouDialog = skipThankYouDialog;
            NativeAppsUrlScheme = nativeAppsUrlScheme;
            DocumentViewingMode = documentViewingMode;
            ThumbnailMode = thumbnailMode;
            ShowTopBar = showTopBar;
            DisplayRejectButtonInTopBar = displayRejectButtonInTopBar;
            MultipleSignatureTypesAndBatchSigningSettings = multipleSignatureTypesAndBatchSigningSettings;
        }

        /// <summary>
        /// Allows to disable the page navigation bar on the right side of the
        /// viewer.
        /// </summary>
        [JsonProperty(PropertyName = "ShowPageNavigationBar")]
        public bool? ShowPageNavigationBar { get; set; }

        /// <summary>
        /// If enabled, the thumbnail display will be visible, otherwise false.
        /// </summary>
        [JsonProperty(PropertyName = "ShowThumbnails")]
        public bool? ShowThumbnails { get; set; }

        /// <summary>
        /// If enabled, finish action will be executed immediately without
        /// confirm dialog.
        /// </summary>
        [JsonProperty(PropertyName = "SkipFinishConfirmDialog")]
        public bool? SkipFinishConfirmDialog { get; set; }

        /// <summary>
        /// If enabled, the download document dialog after finishing the
        /// workstep will be skipped.
        /// </summary>
        [JsonProperty(PropertyName = "SkipDocumentDialog")]
        public bool? SkipDocumentDialog { get; set; }

        /// <summary>
        /// If enabled, available width will be used for images which might
        /// stretch them.
        /// </summary>
        [JsonProperty(PropertyName = "ShowImagesInFullWidth")]
        public bool? ShowImagesInFullWidth { get; set; }

        /// <summary>
        /// If enabled, Geolocation won't be used for webservice calls.
        /// </summary>
        [JsonProperty(PropertyName = "DisableGeolocation")]
        public bool? DisableGeolocation { get; set; }

        /// <summary>
        /// If enabled, the "Download documents dialog" after automatically
        /// finishing the workstep will be shown (e.g. acknowledge receipt
        /// scenario).
        /// </summary>
        [JsonProperty(PropertyName = "ShowDocumentDownloadDialogAfterAutomaticFinish")]
        public bool? ShowDocumentDownloadDialogAfterAutomaticFinish { get; set; }

        /// <summary>
        /// Allows to configure the maximum file size for attachments in
        /// kBytes.
        /// </summary>
        [JsonProperty(PropertyName = "AttachmentsMaxFileSize")]
        public int? AttachmentsMaxFileSize { get; set; }

        /// <summary>
        /// Allows to disable the preview image of the signature when using
        /// the Namirial Disposable certificate functionality.
        /// </summary>
        [JsonProperty(PropertyName = "SkipPreviewImageOnDisposableCertificate")]
        public bool? SkipPreviewImageOnDisposableCertificate { get; set; }

        /// <summary>
        /// If enabled, a Custom.js file will be loaded when the page is
        /// opened allowing to configure customized data.
        /// </summary>
        [JsonProperty(PropertyName = "LoadCustomJs")]
        public bool? LoadCustomJs { get; set; }

        /// <summary>
        /// If enabled, custom buttons can be added via xyzmo.Customization
        /// plugin.
        /// </summary>
        [JsonProperty(PropertyName = "AllowCustomButtons")]
        public bool? AllowCustomButtons { get; set; }

        /// <summary>
        /// Defines how the viewer should guide through the tasks. Possible
        /// values include: 'GuideOnlyRequiredTasks',
        /// 'GuideRequiredAndOptionalTasks', 'GuideDisabled'
        /// </summary>
        [JsonProperty(PropertyName = "GuidingBehavior")]
        public string GuidingBehavior { get; set; }

        /// <summary>
        /// Defining how the viewer should guide through form fields. Possible
        /// values include: 'AllowSubmitAlways',
        /// 'AllowSubmitOnlyAfterAllRequiredFieldsAreDone'
        /// </summary>
        [JsonProperty(PropertyName = "FormFieldsGuidingBehavior")]
        public string FormFieldsGuidingBehavior { get; set; }

        /// <summary>
        /// Defining if the viewer should show the version number.
        /// </summary>
        [JsonProperty(PropertyName = "ShowVersionNumber")]
        public bool? ShowVersionNumber { get; set; }

        /// <summary>
        /// Defining if the viewer should display a warning popup when the
        /// user leaves the page.
        /// </summary>
        [JsonProperty(PropertyName = "EnableWarningPopupOnLeave")]
        public bool? EnableWarningPopupOnLeave { get; set; }

        /// <summary>
        /// Defining when the warning popup should be displayed. Possible
        /// values include: 'FillOrSignField', 'Authentication', 'Always',
        /// 'Agreement'
        /// </summary>
        [JsonProperty(PropertyName = "WarningPopupDisplayAfter")]
        public string WarningPopupDisplayAfter { get; set; }

        /// <summary>
        /// If set to 1 the workstep is automatically finished when opened in
        /// the viewer, if finishing is possible.
        /// </summary>
        [JsonProperty(PropertyName = "FinishWorkstepOnOpen")]
        public bool? FinishWorkstepOnOpen { get; set; }

        /// <summary>
        /// If enabled, finish action will be automatically triggered after
        /// last required task is done.
        /// </summary>
        [JsonProperty(PropertyName = "AutoFinishAfterRequiredTasksDone")]
        public bool? AutoFinishAfterRequiredTasksDone { get; set; }

        /// <summary>
        /// Defines the guiding behavior after a task has been completed (e.g.
        /// signature field has been signed). This flag is not taken into
        /// account if the guiding is disabled. Possible values include:
        /// 'NoMove', 'MoveToNext', 'MoveToNextAndActivate'
        /// </summary>
        [JsonProperty(PropertyName = "GuidingBehaviorOnFinishedTask")]
        public string GuidingBehaviorOnFinishedTask { get; set; }

        /// <summary>
        /// If enabled, the 'thank you dialog' which is shown after all
        /// required tasks have been done, will be skipped.
        /// </summary>
        [JsonProperty(PropertyName = "SkipThankYouDialog")]
        public bool? SkipThankYouDialog { get; set; }

        /// <summary>
        /// Defines the url scheme for the native SAW Viewer applications
        /// (needed for customized SAW Viewer apps).
        /// </summary>
        [JsonProperty(PropertyName = "NativeAppsUrlScheme")]
        public string NativeAppsUrlScheme { get; set; }

        /// <summary>
        /// Defines whether the envelope is displayed in its entirety or if
        /// only a specific document is shown at a time. Possible values
        /// include: 'EndlessPaperAllDocuments', 'EndlessPaperPerDocument'
        /// </summary>
        [JsonProperty(PropertyName = "DocumentViewingMode")]
        public string DocumentViewingMode { get; set; }

        /// <summary>
        /// Defines the appearance of the thumbnail view: all pages of the
        /// entire document are shown, or only the first page of each
        /// document within an envelope. Possible values include:
        /// 'ShowAllPages', 'ShowFirstPageOnly'
        /// </summary>
        [JsonProperty(PropertyName = "ThumbnailMode")]
        public string ThumbnailMode { get; set; }

        /// <summary>
        /// Defines if the top bar should be visible or not. If disabled, also
        /// the 'GuidingBehavior' and the 'DisplayRejectButtonInTopBar' will
        /// be deactivated.
        /// </summary>
        [JsonProperty(PropertyName = "ShowTopBar")]
        public bool? ShowTopBar { get; set; }

        /// <summary>
        /// If enabled, the 'reject' button will be displayed in the left bar
        /// below the 'finish' button as well
        /// </summary>
        [JsonProperty(PropertyName = "DisplayRejectButtonInTopBar")]
        public bool? DisplayRejectButtonInTopBar { get; set; }

        /// <summary>
        /// MultipleSignatureTypesAndBatchSigning settings.
        /// </summary>
        [JsonProperty(PropertyName = "MultipleSignatureTypesAndBatchSigningSettings")]
        public FlowApiMultipleSignatureTypesAndBatchSigningSettings MultipleSignatureTypesAndBatchSigningSettings { get; set; }

    }
}
