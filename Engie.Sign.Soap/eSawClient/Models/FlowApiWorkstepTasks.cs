// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace eSaw.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    public partial class FlowApiWorkstepTasks
    {
        /// <summary>
        /// Initializes a new instance of the FlowApiWorkstepTasks class.
        /// </summary>
        public FlowApiWorkstepTasks() { }

        /// <summary>
        /// Initializes a new instance of the FlowApiWorkstepTasks class.
        /// </summary>
        public FlowApiWorkstepTasks(int? pictureAnnotationMinResolution = default(int?), int? pictureAnnotationMaxResolution = default(int?), string pictureAnnotationColorDepth = default(string), bool? formsIsEditingAllowed = default(bool?), string setFormFieldsToReadOnlyAfterTask = default(string), string sequenceMode = default(string), string positionUnits = default(string), string referenceCorner = default(string), IList<FlowApiWorkstepTask> tasks = default(IList<FlowApiWorkstepTask>))
        {
            PictureAnnotationMinResolution = pictureAnnotationMinResolution;
            PictureAnnotationMaxResolution = pictureAnnotationMaxResolution;
            PictureAnnotationColorDepth = pictureAnnotationColorDepth;
            FormsIsEditingAllowed = formsIsEditingAllowed;
            SetFormFieldsToReadOnlyAfterTask = setFormFieldsToReadOnlyAfterTask;
            SequenceMode = sequenceMode;
            PositionUnits = positionUnits;
            ReferenceCorner = referenceCorner;
            Tasks = tasks;
        }

        /// <summary>
        /// Minimum resolution for PictureAnnotation of the picture based on
        /// the target size.
        /// </summary>
        [JsonProperty(PropertyName = "PictureAnnotationMinResolution")]
        public int? PictureAnnotationMinResolution { get; set; }

        /// <summary>
        /// Minimum resolution of PictureAnnotation the picture based on the
        /// target size.
        /// </summary>
        [JsonProperty(PropertyName = "PictureAnnotationMaxResolution")]
        public int? PictureAnnotationMaxResolution { get; set; }

        /// <summary>
        /// Defines the color depth for PictureAnnotation. Possible values
        /// include: 'Color16M', 'Grayscale256'
        /// </summary>
        [JsonProperty(PropertyName = "PictureAnnotationColorDepth")]
        public string PictureAnnotationColorDepth { get; set; }

        /// <summary>
        /// Define if forms editing is allowed.
        /// </summary>
        [JsonProperty(PropertyName = "FormsIsEditingAllowed")]
        public bool? FormsIsEditingAllowed { get; private set; }

        /// <summary>
        /// set all form fields in the document to readonly right before this
        /// task is executed.
        /// </summary>
        [JsonProperty(PropertyName = "SetFormFieldsToReadOnlyAfterTask")]
        public string SetFormFieldsToReadOnlyAfterTask { get; set; }

        /// <summary>
        /// Mode for sequence of WorkstepTasks. Possible values include:
        /// 'NoSequenceEnforced', 'SequenceOnlyRequiredTasks',
        /// 'SequenceEnforced'
        /// </summary>
        [JsonProperty(PropertyName = "SequenceMode")]
        public string SequenceMode { get; set; }

        /// <summary>
        /// Define the default position units. Possible values include:
        /// 'PdfUnits', 'Inches', 'Millimeters'
        /// </summary>
        [JsonProperty(PropertyName = "PositionUnits")]
        public string PositionUnits { get; set; }

        /// <summary>
        /// Define the default reference corner. Possible values include:
        /// 'Upper_Right', 'Upper_Left', 'Lower_Right', 'Lower_Left'
        /// </summary>
        [JsonProperty(PropertyName = "ReferenceCorner")]
        public string ReferenceCorner { get; set; }

        /// <summary>
        /// Collection of tasks that are assigned and have to be processed.
        /// </summary>
        [JsonProperty(PropertyName = "Tasks")]
        public IList<FlowApiWorkstepTask> Tasks { get; set; }

    }
}
