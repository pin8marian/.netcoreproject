// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace eSaw.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    /// <summary>
    /// FormFieldValidation for numbers.
    /// </summary>
    public partial class FlowApiFormFieldValidationNumber : FlowApiFormFieldValidation
    {
        /// <summary>
        /// Initializes a new instance of the FlowApiFormFieldValidationNumber
        /// class.
        /// </summary>
        public FlowApiFormFieldValidationNumber() { }

        /// <summary>
        /// Initializes a new instance of the FlowApiFormFieldValidationNumber
        /// class.
        /// </summary>
        public FlowApiFormFieldValidationNumber(string type = default(string), int? decimalPlaces = default(int?), string decimalSeparator = default(string), string thousandsSeparator = default(string), string symbol = default(string), string symbolLocation = default(string), FlowApiFormFieldValidationRange range = default(FlowApiFormFieldValidationRange))
            : base(type)
        {
            DecimalPlaces = decimalPlaces;
            DecimalSeparator = decimalSeparator;
            ThousandsSeparator = thousandsSeparator;
            Symbol = symbol;
            SymbolLocation = symbolLocation;
            Range = range;
        }

        /// <summary>
        /// Defines the allowed decimal places.
        /// </summary>
        [JsonProperty(PropertyName = "DecimalPlaces")]
        public int? DecimalPlaces { get; set; }

        /// <summary>
        /// Defines the deciaml seperator. Possible values include: 'Comma',
        /// 'Point', 'Apostrophe'
        /// </summary>
        [JsonProperty(PropertyName = "DecimalSeparator")]
        public string DecimalSeparator { get; set; }

        /// <summary>
        /// Defines the thousands seperator. Possible values include: 'Comma',
        /// 'Point', 'Apostrophe', 'Blank'
        /// </summary>
        [JsonProperty(PropertyName = "ThousandsSeparator")]
        public string ThousandsSeparator { get; set; }

        /// <summary>
        /// Defines the symbol for this number.
        /// </summary>
        [JsonProperty(PropertyName = "Symbol")]
        public string Symbol { get; set; }

        /// <summary>
        /// Defines the location of this symbol. Possible values include:
        /// 'Start', 'StartWithBlank', 'End', 'EndWithBlank'
        /// </summary>
        [JsonProperty(PropertyName = "SymbolLocation")]
        public string SymbolLocation { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Range")]
        public FlowApiFormFieldValidationRange Range { get; set; }

    }
}
