// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace eSaw.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    /// <summary>
    /// Configured StampImprintConfiguration.
    /// </summary>
    public partial class FlowApiStampImprintConfiguration
    {
        /// <summary>
        /// Initializes a new instance of the FlowApiStampImprintConfiguration
        /// class.
        /// </summary>
        public FlowApiStampImprintConfiguration() { }

        /// <summary>
        /// Initializes a new instance of the FlowApiStampImprintConfiguration
        /// class.
        /// </summary>
        public FlowApiStampImprintConfiguration(bool? displayExtraInformation = default(bool?), bool? displayEmail = default(bool?), bool? displayIp = default(bool?), bool? displayName = default(bool?), bool? displaySignatureDate = default(bool?), string fontFamily = default(string), double? fontSize = default(double?))
        {
            DisplayExtraInformation = displayExtraInformation;
            DisplayEmail = displayEmail;
            DisplayIp = displayIp;
            DisplayName = displayName;
            DisplaySignatureDate = displaySignatureDate;
            FontFamily = fontFamily;
            FontSize = fontSize;
        }

        /// <summary>
        /// Define if extra information should be displayed.
        /// </summary>
        [JsonProperty(PropertyName = "DisplayExtraInformation")]
        public bool? DisplayExtraInformation { get; set; }

        /// <summary>
        /// Define if email should be displayed.
        /// </summary>
        [JsonProperty(PropertyName = "DisplayEmail")]
        public bool? DisplayEmail { get; set; }

        /// <summary>
        /// Define if ip should be displayed.
        /// </summary>
        [JsonProperty(PropertyName = "DisplayIp")]
        public bool? DisplayIp { get; set; }

        /// <summary>
        /// Define if name should be displayed.
        /// </summary>
        [JsonProperty(PropertyName = "DisplayName")]
        public bool? DisplayName { get; set; }

        /// <summary>
        /// Define if signature date should be displayed.
        /// </summary>
        [JsonProperty(PropertyName = "DisplaySignatureDate")]
        public bool? DisplaySignatureDate { get; set; }

        /// <summary>
        /// Define a font-family.
        /// </summary>
        [JsonProperty(PropertyName = "FontFamily")]
        public string FontFamily { get; set; }

        /// <summary>
        /// Define a font-size.
        /// </summary>
        [JsonProperty(PropertyName = "FontSize")]
        public double? FontSize { get; set; }

    }
}
